package academy.learnProgramming;

import java.util.Iterator;
import java.util.LinkedList;
import java.util.ListIterator;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {

        LinkedList<String> placesToVisit = new LinkedList<String>();
        placesToVisit.add("Mumbai");
        placesToVisit.add("Calcutta");
        placesToVisit.add("ahmedabad");
        placesToVisit.add("chandighar");
        placesToVisit.add("Ganjam");
        placesToVisit.add("Chennai");
        printPlaces(placesToVisit);
        placesToVisit.add(2, "kolahpure");
        printPlaces(placesToVisit);
        printPlacesOrder(placesToVisit, "zelhi");
        printPlaces(placesToVisit);
        placesToVisit.add(2, "Assam");
        placesToVisit.add(2, "Gujarat");
        placesToVisit.add(2, "Maharashtra");
        placesToVisit.add(2, "Karnataka");
        placesToVisit.add(2, "TamilNadu");
        placesToVisit.add(2, "Kerala");
        placesToVisit.add(2, "MadhyaPradesh");
        placesToVisit.add(2, "Haryana");
        placesToVisit.add(2, "Odisha");
        placesToVisit.add(2, "Telengana");

        visit(placesToVisit);
    }

    private static void printPlaces(LinkedList<String> placesLinkedList) {
        Iterator<String> iteratorPlacesToVisit = placesLinkedList.iterator();
        while (iteratorPlacesToVisit.hasNext()) {
            System.out.println("My Places to Visit are " + iteratorPlacesToVisit.next());
        }
        System.out.println("====================");
    }

    private static boolean printPlacesOrder(LinkedList<String> orderPlacesList, String cityOrder) {
        ListIterator<String> myListIterator = orderPlacesList.listIterator();

        while (myListIterator.hasNext()) {
            int position = myListIterator.next().compareTo(cityOrder);
            if (position > 0) {
                myListIterator.previous();
                myListIterator.add(cityOrder);
                return true;
            } else if (position == 0) {
                System.out.println("Do Nothing");
                return false;
            } else if (position < 0) {
                System.out.println("Do nothing");
            }
        }
        myListIterator.add(cityOrder);
        return true;
    }

    private static void visit(LinkedList cities) {
        Scanner scanner = new Scanner(System.in);
        boolean quit = false;
        boolean goingForward = true;
        ListIterator<String> listIterator = cities.listIterator();

        if (cities.isEmpty()) {
            System.out.println("No Cities in the itenery");
            return;
        } else {
            System.out.println("Now visiting ... " + listIterator.next());
            printMenu();
        }

        while (!quit) {
            int action = scanner.nextInt();
            scanner.nextLine();
            switch (action) {
                case 0:
                    System.out.println("Vacation is Over ...");
                    quit = true;
                    break;
                case 1:
                    if(!goingForward){
                        if(listIterator.hasNext()){
                            listIterator.next();
                        }
                        goingForward = true;
                    }
                    if (listIterator.hasNext()) {
                        System.out.println("Visiting the current city " + listIterator.next());
                    } else {
                        System.out.println("Reached the end of the current list");
                        goingForward = false;
                    }
                    break;

                case 2:

                    if(goingForward){
                        if(listIterator.hasPrevious()){
                            listIterator.previous();
                        }
                        goingForward = false;
                    }
                    if (listIterator.hasPrevious()) {
                        System.out.println("We are visiing the current city " + listIterator.previous());
                    } else {
                        System.out.println("We are at the start of the list");
                        goingForward = true;
                    }
                    break;
                case 3:
                    printMenu();
                    break;

            }
        }
    }

    private static void printMenu(){
        System.out.println("Available Actions are : \npress");
        System.out.println("0 to quit \n" +
                "1 - to go to next city\n" +
                "2 - to go previous city\n" +
                "3- printMenu option");
    }

}
